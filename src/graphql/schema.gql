scalar DateTime

type Entry {
  id: Int!
  title: String!
  text: String!
  eyecatch: String!
  publishedAt: DateTime!
  tags: [TagsOnEntries!]
}

type Tag {
  id: Int!
  name: String!
}

type TagsOnEntries {
  entry: Entry!
  tag: Tag!
}

input ConditionalEntries {
  sort: String
  keyword: String
  entryIds: [Int]
}

type Query {
  getEntries(conditionalEntries: ConditionalEntries): [Entry!]!
}

input TagInput {
  name: String!
}

type Mutation {
  addEntry(title: String!, text: String!, eyecatch: String!, tags: [TagInput!]!): Entry!
  updateEntry(id: Int!, title: String!, text: String!, eyecatch: String!, tags: [TagInput!]!): Entry!
  deleteEntries(entryIds: [Int!]!): Boolean!
}
